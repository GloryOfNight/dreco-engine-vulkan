cmake_minimum_required(VERSION 3.19.0)
project(dreco)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake")

find_package(Vulkan REQUIRED)
find_package(SDL2 REQUIRED)

file(GLOB_RECURSE DRECO_SOURCE_FILES ${CMAKE_SOURCE_DIR}/src/*.cxx)
file(GLOB_RECURSE DRECO_HEADER_FILES ${CMAKE_SOURCE_DIR}/src/*.hxx)

add_library(${PROJECT_NAME} SHARED ${DRECO_SOURCE_FILES} ${DRECO_HEADER_FILES})

target_link_libraries(${PROJECT_NAME} PRIVATE ${Vulkan_LIBRARY} ${SDL2_LIBRARY})
target_include_directories(${PROJECT_NAME} PRIVATE ${Vulkan_INCLUDE_DIR} ${SDL2_INCLUDE_DIR})

set_target_properties(${PROJECT_NAME} PROPERTIES
    CXX_STANDARD 17
    CXX_STANDARD_REQUIRED YES
    CXX_EXTENSIONS NO
    EXPORT_COMPILE_COMMANDS TRUE
)

include_directories("thirdparty")

if (UNIX)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")
elseif(MSVC)
target_compile_definitions(${PROJECT_NAME} PRIVATE "-DDRECO_DECLSPEC=__declspec(dllexport)" "-D_USE_MATH_DEFINES=true")
endif()

target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/src/)

set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
if (NOT DEFINED CMAKE_INSTALL_RPATH)
set(CMAKE_INSTALL_RPATH "${CMAKE_CURRENT_LIST_DIR}/install")
endif()

add_subdirectory(examples/triangle)

include(tools/tools.cmake)

set(CONTENT_DIR "${CMAKE_SOURCE_DIR}/content")

install(FILES ${SHADER_BINARY_FILES} DESTINATION ${CMAKE_INSTALL_RPATH}/shaders)
install(DIRECTORY ${CONTENT_DIR} DESTINATION ${CMAKE_INSTALL_RPATH})

install(TARGETS dreco triangle
        RUNTIME DESTINATION ${CMAKE_INSTALL_RPATH}
        LIBRARY DESTINATION ${CMAKE_INSTALL_RPATH})

if (MSVC)
## Set SDL2_DLL by replacing SDL2.lib with SDL2.dll
string(FIND "${SDL2_LIBRARY}" "/SDL2.lib" SDL2_LIBRARIES_PATH_INDEX)
string(SUBSTRING "${SDL2_LIBRARY}" "0" "${SDL2_LIBRARIES_PATH_INDEX}" SDL2_LIBRARIES_PATH)
set(SDL2_DLL "${SDL2_LIBRARIES_PATH}/SDL2.dll")

# Copy SDL2.dll to binary directory 
get_property(IS_MULTI_CONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)
if (IS_MULTI_CONFIG)
add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_COMMAND} 
-E copy_if_different "${SDL2_DLL}" "${PROJECT_BINARY_DIR}/$<CONFIG>")
else()
file(COPY ${SDL2_DLL} DESTINATION ${PROJECT_BINARY_DIR})
endif()

install(FILES ${SDL2_DLL} DESTINATION ${CMAKE_INSTALL_RPATH})
endif()